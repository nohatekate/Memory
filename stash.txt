//trying to figure out showing card image 
      // cardEls.style.visibility = 0 ? "visible" : "hidden";
    // // needs to start game with 8 cards face down
    // const testClick = gameTable[idx].includes(0) ? "hidden" : "visible"
        // for (let j = 0; j < cards.length; j++) {
        //     const currentCardIdx = cards[j]
        //     if (currentTableIdx === 0) {
        //         currentTableIdx === currentCardIdx
        //     } else {
        //     }
        // }

//Trying to figure out how to stop allowing a click on a matched pair // and how to change unmatched pairs to not showing automatcially
//has been clicked variable
//add a variable to each card if it's been clicked or not (true / false) / add additional id (flipped or not flipped)
//element.removeEventListener(type, handler)
// Take event listener off matched pairs
// Change 1's to 0's to stop showing cards of the unmatched pairs

           function stopShowingUnmatchedCards() {
    for (let i = 0; i < cards.length; i++) {
        const currentEmoji = cards[i]
        if (cardsMatch[0] === currentEmoji) {
            gameTable[i] = 0;
        }
        if (cardsMatch[1] === currentEmoji) {
            gameTable[i] = 0;
        }
    }
}
  setTimeout(stopShowingUnmatchedCards, 1000)

//Fisher-Yates Shuffle//
   // Start from the last element and swap
    // one by one. We don't need to run for
    // the first element that's why i > 0
           // pick a random index from 0 to i inclusive
            // at random index
        // Swap arr[i] with the element